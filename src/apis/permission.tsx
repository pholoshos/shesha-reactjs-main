/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
/**
 * Generic DTO of the simple autocomplete item
 */
export interface AutocompleteItemDto {
  value?: string | null;
  displayText?: string | null;
}

export interface PermissionDto {
  id?: string | null;
  name?: string | null;
  displayName?: string | null;
  description?: string | null;
  parentName?: string | null;
  isDbPermission?: boolean;
  parent?: PermissionDto;
  child?: PermissionDto[] | null;
}

export interface PermissionGetQueryParams {
  id?: string;
  'api-version'?: string;
}

export type PermissionGetProps = Omit<GetProps<PermissionDto, unknown, PermissionGetQueryParams, void>, 'path'>;

export const PermissionGet = (props: PermissionGetProps) => (
  <Get<PermissionDto, unknown, PermissionGetQueryParams, void> path={`/api/services/app/Permission/Get`} {...props} />
);

export type UsePermissionGetProps = Omit<UseGetProps<PermissionDto, unknown, PermissionGetQueryParams, void>, 'path'>;

export const usePermissionGet = (props: UsePermissionGetProps) =>
  useGet<PermissionDto, unknown, PermissionGetQueryParams, void>(`/api/services/app/Permission/Get`, props);

export type permissionGetProps = Omit<
  RestfulShesha.GetProps<PermissionDto, unknown, PermissionGetQueryParams, void>,
  'queryParams'
>;
export const permissionGet = (queryParams: PermissionGetQueryParams, props: permissionGetProps) =>
  RestfulShesha.get<PermissionDto, unknown, PermissionGetQueryParams, void>(
    `/api/services/app/Permission/Get`,
    queryParams,
    props
  );

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface PermissionDtoListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: PermissionDto[] | null;
}

export interface PermissionGetAllQueryParams {
  'api-version'?: string;
}

export type PermissionGetAllProps = Omit<
  GetProps<PermissionDtoListAjaxResponse, unknown, PermissionGetAllQueryParams, void>,
  'path'
>;

export const PermissionGetAll = (props: PermissionGetAllProps) => (
  <Get<PermissionDtoListAjaxResponse, unknown, PermissionGetAllQueryParams, void>
    path={`/api/services/app/Permission/GetAll`}
    {...props}
  />
);

export type UsePermissionGetAllProps = Omit<
  UseGetProps<PermissionDtoListAjaxResponse, unknown, PermissionGetAllQueryParams, void>,
  'path'
>;

export const usePermissionGetAll = (props: UsePermissionGetAllProps) =>
  useGet<PermissionDtoListAjaxResponse, unknown, PermissionGetAllQueryParams, void>(
    `/api/services/app/Permission/GetAll`,
    props
  );

export type permissionGetAllProps = Omit<
  RestfulShesha.GetProps<PermissionDto[], unknown, PermissionGetAllQueryParams, void>,
  'queryParams'
>;
export const permissionGetAll = (queryParams: PermissionGetAllQueryParams, props: permissionGetAllProps) =>
  RestfulShesha.get<PermissionDto[], unknown, PermissionGetAllQueryParams, void>(
    `/api/services/app/Permission/GetAll`,
    queryParams,
    props
  );

export interface PermissionGetAllTreeQueryParams {
  'api-version'?: string;
}

export type PermissionGetAllTreeProps = Omit<
  GetProps<PermissionDtoListAjaxResponse, unknown, PermissionGetAllTreeQueryParams, void>,
  'path'
>;

export const PermissionGetAllTree = (props: PermissionGetAllTreeProps) => (
  <Get<PermissionDtoListAjaxResponse, unknown, PermissionGetAllTreeQueryParams, void>
    path={`/api/services/app/Permission/GetAllTree`}
    {...props}
  />
);

export type UsePermissionGetAllTreeProps = Omit<
  UseGetProps<PermissionDtoListAjaxResponse, unknown, PermissionGetAllTreeQueryParams, void>,
  'path'
>;

export const usePermissionGetAllTree = (props: UsePermissionGetAllTreeProps) =>
  useGet<PermissionDtoListAjaxResponse, unknown, PermissionGetAllTreeQueryParams, void>(
    `/api/services/app/Permission/GetAllTree`,
    props
  );

export type permissionGetAllTreeProps = Omit<
  RestfulShesha.GetProps<PermissionDto[], unknown, PermissionGetAllTreeQueryParams, void>,
  'queryParams'
>;
export const permissionGetAllTree = (queryParams: PermissionGetAllTreeQueryParams, props: permissionGetAllTreeProps) =>
  RestfulShesha.get<PermissionDto[], unknown, PermissionGetAllTreeQueryParams, void>(
    `/api/services/app/Permission/GetAllTree`,
    queryParams,
    props
  );

export interface PermissionCreateQueryParams {
  'api-version'?: string;
}

export type PermissionCreateProps = Omit<
  MutateProps<PermissionDto, unknown, PermissionCreateQueryParams, PermissionDto, void>,
  'path' | 'verb'
>;

export const PermissionCreate = (props: PermissionCreateProps) => (
  <Mutate<PermissionDto, unknown, PermissionCreateQueryParams, PermissionDto, void>
    verb="POST"
    path={`/api/services/app/Permission/Create`}
    {...props}
  />
);

export type UsePermissionCreateProps = Omit<
  UseMutateProps<PermissionDto, unknown, PermissionCreateQueryParams, PermissionDto, void>,
  'path' | 'verb'
>;

export const usePermissionCreate = (props: UsePermissionCreateProps) =>
  useMutate<PermissionDto, unknown, PermissionCreateQueryParams, PermissionDto, void>(
    'POST',
    `/api/services/app/Permission/Create`,
    props
  );

export type permissionCreateProps = Omit<
  RestfulShesha.MutateProps<PermissionDto, unknown, PermissionCreateQueryParams, PermissionDto, void>,
  'data'
>;
export const permissionCreate = (data: PermissionDto, props: permissionCreateProps) =>
  RestfulShesha.mutate<PermissionDto, unknown, PermissionCreateQueryParams, PermissionDto, void>(
    'POST',
    `/api/services/app/Permission/Create`,
    data,
    props
  );

export interface PermissionUpdateQueryParams {
  'api-version'?: string;
}

export type PermissionUpdateProps = Omit<
  MutateProps<PermissionDto, unknown, PermissionUpdateQueryParams, PermissionDto, void>,
  'path' | 'verb'
>;

export const PermissionUpdate = (props: PermissionUpdateProps) => (
  <Mutate<PermissionDto, unknown, PermissionUpdateQueryParams, PermissionDto, void>
    verb="PUT"
    path={`/api/services/app/Permission/Update`}
    {...props}
  />
);

export type UsePermissionUpdateProps = Omit<
  UseMutateProps<PermissionDto, unknown, PermissionUpdateQueryParams, PermissionDto, void>,
  'path' | 'verb'
>;

export const usePermissionUpdate = (props: UsePermissionUpdateProps) =>
  useMutate<PermissionDto, unknown, PermissionUpdateQueryParams, PermissionDto, void>(
    'PUT',
    `/api/services/app/Permission/Update`,
    props
  );

export type permissionUpdateProps = Omit<
  RestfulShesha.MutateProps<PermissionDto, unknown, PermissionUpdateQueryParams, PermissionDto, void>,
  'data'
>;
export const permissionUpdate = (data: PermissionDto, props: permissionUpdateProps) =>
  RestfulShesha.mutate<PermissionDto, unknown, PermissionUpdateQueryParams, PermissionDto, void>(
    'PUT',
    `/api/services/app/Permission/Update`,
    data,
    props
  );

export interface PermissionUpdateParentQueryParams {
  'api-version'?: string;
}

export type PermissionUpdateParentProps = Omit<
  MutateProps<void, unknown, PermissionUpdateParentQueryParams, PermissionDto, void>,
  'path' | 'verb'
>;

export const PermissionUpdateParent = (props: PermissionUpdateParentProps) => (
  <Mutate<void, unknown, PermissionUpdateParentQueryParams, PermissionDto, void>
    verb="PUT"
    path={`/api/services/app/Permission/UpdateParent`}
    {...props}
  />
);

export type UsePermissionUpdateParentProps = Omit<
  UseMutateProps<void, unknown, PermissionUpdateParentQueryParams, PermissionDto, void>,
  'path' | 'verb'
>;

export const usePermissionUpdateParent = (props: UsePermissionUpdateParentProps) =>
  useMutate<void, unknown, PermissionUpdateParentQueryParams, PermissionDto, void>(
    'PUT',
    `/api/services/app/Permission/UpdateParent`,
    props
  );

export type permissionUpdateParentProps = Omit<
  RestfulShesha.MutateProps<void, unknown, PermissionUpdateParentQueryParams, PermissionDto, void>,
  'data'
>;
export const permissionUpdateParent = (data: PermissionDto, props: permissionUpdateParentProps) =>
  RestfulShesha.mutate<void, unknown, PermissionUpdateParentQueryParams, PermissionDto, void>(
    'PUT',
    `/api/services/app/Permission/UpdateParent`,
    data,
    props
  );

export interface PermissionDeleteQueryParams {
  name?: string;
  'api-version'?: string;
}

export type PermissionDeleteProps = Omit<
  MutateProps<void, unknown, PermissionDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const PermissionDelete = (props: PermissionDeleteProps) => (
  <Mutate<void, unknown, PermissionDeleteQueryParams, void, void>
    verb="DELETE"
    path={`/api/services/app/Permission/Delete`}
    {...props}
  />
);

export type UsePermissionDeleteProps = Omit<
  UseMutateProps<void, unknown, PermissionDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const usePermissionDelete = (props: UsePermissionDeleteProps) =>
  useMutate<void, unknown, PermissionDeleteQueryParams, void, void>('DELETE', `/api/services/app/Permission/Delete`, {
    ...props,
  });

export type permissionDeleteProps = Omit<
  RestfulShesha.MutateProps<void, unknown, PermissionDeleteQueryParams, void, void>,
  'data'
>;
export const permissionDelete = (props: permissionDeleteProps) =>
  RestfulShesha.mutate<void, unknown, PermissionDeleteQueryParams, void, void>(
    'DELETE',
    `/api/services/app/Permission/Delete`,
    undefined,
    props
  );

export interface PermissionAutocompleteQueryParams {
  term?: string;
  'api-version'?: string;
}

export type PermissionAutocompleteProps = Omit<
  GetProps<AutocompleteItemDto[], unknown, PermissionAutocompleteQueryParams, void>,
  'path'
>;

export const PermissionAutocomplete = (props: PermissionAutocompleteProps) => (
  <Get<AutocompleteItemDto[], unknown, PermissionAutocompleteQueryParams, void>
    path={`/api/services/app/Permission/Autocomplete`}
    {...props}
  />
);

export type UsePermissionAutocompleteProps = Omit<
  UseGetProps<AutocompleteItemDto[], unknown, PermissionAutocompleteQueryParams, void>,
  'path'
>;

export const usePermissionAutocomplete = (props: UsePermissionAutocompleteProps) =>
  useGet<AutocompleteItemDto[], unknown, PermissionAutocompleteQueryParams, void>(
    `/api/services/app/Permission/Autocomplete`,
    props
  );

export type permissionAutocompleteProps = Omit<
  RestfulShesha.GetProps<AutocompleteItemDto[], unknown, PermissionAutocompleteQueryParams, void>,
  'queryParams'
>;
export const permissionAutocomplete = (
  queryParams: PermissionAutocompleteQueryParams,
  props: permissionAutocompleteProps
) =>
  RestfulShesha.get<AutocompleteItemDto[], unknown, PermissionAutocompleteQueryParams, void>(
    `/api/services/app/Permission/Autocomplete`,
    queryParams,
    props
  );
