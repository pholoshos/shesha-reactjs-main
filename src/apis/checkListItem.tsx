/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
export interface GuidEntityDto {
  id?: string;
}

/**
 * Check list item DTO for tree component
 */
export interface CheckListTreeItemDto {
  id?: string;
  /**
   * Name
   */
  name?: string | null;
  /**
   * Parent Id
   */
  parentId?: string | null;
  /**
   * Order Index
   */
  orderIndex?: number;
  /**
   * If true, indicates that item has child items
   */
  hasChilds?: boolean;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface CheckListTreeItemDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: CheckListTreeItemDto;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

/**
 * Input to get child check list items
 */
export interface GetChildCheckListItemsInput {
  /**
   * Id of the checklist
   */
  checkListId?: string;
  /**
   * Id of the parent item
   */
  parentId?: string | null;
}

export interface CheckListTreeItemDtoListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: CheckListTreeItemDto[] | null;
}

/**
 * Move check list item input
 */
export interface UpdateChildItemsInput {
  /**
   * Id of the check list
   */
  checkListId?: string;
  /**
   * Id of the new parent item
   */
  parentId?: string | null;
  /**
   * List of child item ids
   */
  childIds?: string[] | null;
}

export interface ReferenceListItemValueDto {
  item?: string | null;
  itemValue?: number | null;
}

/**
 * CheckListItem DTO
 */
export interface CheckListItemDto {
  id?: string;
  /**
   * Id of the check list which current item belongs to
   */
  checkListId?: string;
  /**
   * Parent item id
   */
  parentId?: string | null;
  /**
   * Order index of the item
   */
  orderIndex?: number;
  itemType?: ReferenceListItemValueDto;
  /**
   * Item name
   */
  name?: string | null;
  /**
   * Item description
   */
  description?: string | null;
  /**
   * If true, the user is able to add comments to this item/group
   */
  allowAddComments?: boolean;
  /**
   * Heading of the comments box
   */
  commentsHeading?: string | null;
  /**
   * Custom visibility of comments (javascript expression)
   */
  commentsVisibilityExpression?: string | null;
}

export interface CheckListItemDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: CheckListItemDto;
}

export interface CheckListItemDtoPagedResultDto {
  items?: CheckListItemDto[] | null;
  totalCount?: number;
}

export interface CheckListItemDtoPagedResultDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: CheckListItemDtoPagedResultDto;
}

export type CheckListItemGetTreeItemProps = Omit<
  MutateProps<CheckListTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto, void>,
  'path' | 'verb'
>;

/**
 * Returns child areas of the specified parent
 */
export const CheckListItemGetTreeItem = (props: CheckListItemGetTreeItemProps) => (
  <Mutate<CheckListTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto, void>
    verb="POST"
    path={`/api/services/app/CheckListItem/GetTreeItem`}
    {...props}
  />
);

export type UseCheckListItemGetTreeItemProps = Omit<
  UseMutateProps<CheckListTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto, void>,
  'path' | 'verb'
>;

/**
 * Returns child areas of the specified parent
 */
export const useCheckListItemGetTreeItem = (props: UseCheckListItemGetTreeItemProps) =>
  useMutate<CheckListTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto, void>(
    'POST',
    `/api/services/app/CheckListItem/GetTreeItem`,
    props
  );

export type checkListItemGetTreeItemProps = Omit<
  RestfulShesha.MutateProps<CheckListTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto, void>,
  'data'
>;
/**
 * Returns child areas of the specified parent
 */
export const checkListItemGetTreeItem = (data: GuidEntityDto, props: checkListItemGetTreeItemProps) =>
  RestfulShesha.mutate<CheckListTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto, void>(
    'POST',
    `/api/services/app/CheckListItem/GetTreeItem`,
    data,
    props
  );

export type CheckListItemGetChildTreeItemsProps = Omit<
  MutateProps<CheckListTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildCheckListItemsInput, void>,
  'path' | 'verb'
>;

/**
 * Returns child items of the specified parent
 */
export const CheckListItemGetChildTreeItems = (props: CheckListItemGetChildTreeItemsProps) => (
  <Mutate<CheckListTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildCheckListItemsInput, void>
    verb="POST"
    path={`/api/services/app/CheckListItem/GetChildTreeItems`}
    {...props}
  />
);

export type UseCheckListItemGetChildTreeItemsProps = Omit<
  UseMutateProps<CheckListTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildCheckListItemsInput, void>,
  'path' | 'verb'
>;

/**
 * Returns child items of the specified parent
 */
export const useCheckListItemGetChildTreeItems = (props: UseCheckListItemGetChildTreeItemsProps) =>
  useMutate<CheckListTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildCheckListItemsInput, void>(
    'POST',
    `/api/services/app/CheckListItem/GetChildTreeItems`,
    props
  );

export type checkListItemGetChildTreeItemsProps = Omit<
  RestfulShesha.MutateProps<
    CheckListTreeItemDtoListAjaxResponse,
    AjaxResponseBase,
    void,
    GetChildCheckListItemsInput,
    void
  >,
  'data'
>;
/**
 * Returns child items of the specified parent
 */
export const checkListItemGetChildTreeItems = (
  data: GetChildCheckListItemsInput,
  props: checkListItemGetChildTreeItemsProps
) =>
  RestfulShesha.mutate<CheckListTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildCheckListItemsInput, void>(
    'POST',
    `/api/services/app/CheckListItem/GetChildTreeItems`,
    data,
    props
  );

export type CheckListItemUpdateChildItemsProps = Omit<
  MutateProps<void, unknown, void, UpdateChildItemsInput, void>,
  'path' | 'verb'
>;

/**
 * Moves Area to a new parent
 */
export const CheckListItemUpdateChildItems = (props: CheckListItemUpdateChildItemsProps) => (
  <Mutate<void, unknown, void, UpdateChildItemsInput, void>
    verb="POST"
    path={`/api/services/app/CheckListItem/UpdateChildItems`}
    {...props}
  />
);

export type UseCheckListItemUpdateChildItemsProps = Omit<
  UseMutateProps<void, unknown, void, UpdateChildItemsInput, void>,
  'path' | 'verb'
>;

/**
 * Moves Area to a new parent
 */
export const useCheckListItemUpdateChildItems = (props: UseCheckListItemUpdateChildItemsProps) =>
  useMutate<void, unknown, void, UpdateChildItemsInput, void>(
    'POST',
    `/api/services/app/CheckListItem/UpdateChildItems`,
    props
  );

export type checkListItemUpdateChildItemsProps = Omit<
  RestfulShesha.MutateProps<void, unknown, void, UpdateChildItemsInput, void>,
  'data'
>;
/**
 * Moves Area to a new parent
 */
export const checkListItemUpdateChildItems = (data: UpdateChildItemsInput, props: checkListItemUpdateChildItemsProps) =>
  RestfulShesha.mutate<void, unknown, void, UpdateChildItemsInput, void>(
    'POST',
    `/api/services/app/CheckListItem/UpdateChildItems`,
    data,
    props
  );

export interface CheckListItemDeleteQueryParams {
  id?: string;
}

export type CheckListItemDeleteProps = Omit<
  MutateProps<void, unknown, CheckListItemDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const CheckListItemDelete = (props: CheckListItemDeleteProps) => (
  <Mutate<void, unknown, CheckListItemDeleteQueryParams, void, void>
    verb="DELETE"
    path={`/api/services/app/CheckListItem/Delete`}
    {...props}
  />
);

export type UseCheckListItemDeleteProps = Omit<
  UseMutateProps<void, unknown, CheckListItemDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const useCheckListItemDelete = (props: UseCheckListItemDeleteProps) =>
  useMutate<void, unknown, CheckListItemDeleteQueryParams, void, void>(
    'DELETE',
    `/api/services/app/CheckListItem/Delete`,
    { ...props }
  );

export type checkListItemDeleteProps = Omit<
  RestfulShesha.MutateProps<void, unknown, CheckListItemDeleteQueryParams, void, void>,
  'data'
>;
export const checkListItemDelete = (props: checkListItemDeleteProps) =>
  RestfulShesha.mutate<void, unknown, CheckListItemDeleteQueryParams, void, void>(
    'DELETE',
    `/api/services/app/CheckListItem/Delete`,
    undefined,
    props
  );

export interface CheckListItemGetQueryParams {
  id?: string;
}

export type CheckListItemGetProps = Omit<
  GetProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, CheckListItemGetQueryParams, void>,
  'path'
>;

export const CheckListItemGet = (props: CheckListItemGetProps) => (
  <Get<CheckListItemDtoAjaxResponse, AjaxResponseBase, CheckListItemGetQueryParams, void>
    path={`/api/services/app/CheckListItem/Get`}
    {...props}
  />
);

export type UseCheckListItemGetProps = Omit<
  UseGetProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, CheckListItemGetQueryParams, void>,
  'path'
>;

export const useCheckListItemGet = (props: UseCheckListItemGetProps) =>
  useGet<CheckListItemDtoAjaxResponse, AjaxResponseBase, CheckListItemGetQueryParams, void>(
    `/api/services/app/CheckListItem/Get`,
    props
  );

export type checkListItemGetProps = Omit<
  RestfulShesha.GetProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, CheckListItemGetQueryParams, void>,
  'queryParams'
>;
export const checkListItemGet = (queryParams: CheckListItemGetQueryParams, props: checkListItemGetProps) =>
  RestfulShesha.get<CheckListItemDtoAjaxResponse, AjaxResponseBase, CheckListItemGetQueryParams, void>(
    `/api/services/app/CheckListItem/Get`,
    queryParams,
    props
  );

export interface CheckListItemGetAllQueryParams {
  sorting?: string | null;
  skipCount?: number;
  maxResultCount?: number;
}

export type CheckListItemGetAllProps = Omit<
  GetProps<CheckListItemDtoPagedResultDtoAjaxResponse, AjaxResponseBase, CheckListItemGetAllQueryParams, void>,
  'path'
>;

export const CheckListItemGetAll = (props: CheckListItemGetAllProps) => (
  <Get<CheckListItemDtoPagedResultDtoAjaxResponse, AjaxResponseBase, CheckListItemGetAllQueryParams, void>
    path={`/api/services/app/CheckListItem/GetAll`}
    {...props}
  />
);

export type UseCheckListItemGetAllProps = Omit<
  UseGetProps<CheckListItemDtoPagedResultDtoAjaxResponse, AjaxResponseBase, CheckListItemGetAllQueryParams, void>,
  'path'
>;

export const useCheckListItemGetAll = (props: UseCheckListItemGetAllProps) =>
  useGet<CheckListItemDtoPagedResultDtoAjaxResponse, AjaxResponseBase, CheckListItemGetAllQueryParams, void>(
    `/api/services/app/CheckListItem/GetAll`,
    props
  );

export type checkListItemGetAllProps = Omit<
  RestfulShesha.GetProps<
    CheckListItemDtoPagedResultDtoAjaxResponse,
    AjaxResponseBase,
    CheckListItemGetAllQueryParams,
    void
  >,
  'queryParams'
>;
export const checkListItemGetAll = (queryParams: CheckListItemGetAllQueryParams, props: checkListItemGetAllProps) =>
  RestfulShesha.get<CheckListItemDtoPagedResultDtoAjaxResponse, AjaxResponseBase, CheckListItemGetAllQueryParams, void>(
    `/api/services/app/CheckListItem/GetAll`,
    queryParams,
    props
  );

export type CheckListItemCreateProps = Omit<
  MutateProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>,
  'path' | 'verb'
>;

export const CheckListItemCreate = (props: CheckListItemCreateProps) => (
  <Mutate<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>
    verb="POST"
    path={`/api/services/app/CheckListItem/Create`}
    {...props}
  />
);

export type UseCheckListItemCreateProps = Omit<
  UseMutateProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>,
  'path' | 'verb'
>;

export const useCheckListItemCreate = (props: UseCheckListItemCreateProps) =>
  useMutate<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>(
    'POST',
    `/api/services/app/CheckListItem/Create`,
    props
  );

export type checkListItemCreateProps = Omit<
  RestfulShesha.MutateProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>,
  'data'
>;
export const checkListItemCreate = (data: CheckListItemDto, props: checkListItemCreateProps) =>
  RestfulShesha.mutate<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>(
    'POST',
    `/api/services/app/CheckListItem/Create`,
    data,
    props
  );

export type CheckListItemUpdateProps = Omit<
  MutateProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>,
  'path' | 'verb'
>;

export const CheckListItemUpdate = (props: CheckListItemUpdateProps) => (
  <Mutate<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>
    verb="PUT"
    path={`/api/services/app/CheckListItem/Update`}
    {...props}
  />
);

export type UseCheckListItemUpdateProps = Omit<
  UseMutateProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>,
  'path' | 'verb'
>;

export const useCheckListItemUpdate = (props: UseCheckListItemUpdateProps) =>
  useMutate<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>(
    'PUT',
    `/api/services/app/CheckListItem/Update`,
    props
  );

export type checkListItemUpdateProps = Omit<
  RestfulShesha.MutateProps<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>,
  'data'
>;
export const checkListItemUpdate = (data: CheckListItemDto, props: checkListItemUpdateProps) =>
  RestfulShesha.mutate<CheckListItemDtoAjaxResponse, AjaxResponseBase, void, CheckListItemDto, void>(
    'PUT',
    `/api/services/app/CheckListItem/Update`,
    data,
    props
  );
