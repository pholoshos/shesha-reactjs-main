/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
export interface PersonGuidDynamicDto {
  id?: string;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface PersonGuidDynamicDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: PersonGuidDynamicDto;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface PersonGuidDynamicDtoPagedResultDto {
  items?: PersonGuidDynamicDto[] | null;
  totalCount?: number;
}

export interface PersonGuidDynamicDtoPagedResultDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: PersonGuidDynamicDtoPagedResultDto;
}

export interface PersonTestGetQueryParams {
  id?: string;
}

export type PersonTestGetProps = Omit<
  GetProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>,
  'path'
>;

export const PersonTestGet = (props: PersonTestGetProps) => (
  <Get<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>
    path={`/api/services/Shesha/PersonTest/Get`}
    {...props}
  />
);

export type UsePersonTestGetProps = Omit<
  UseGetProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>,
  'path'
>;

export const usePersonTestGet = (props: UsePersonTestGetProps) =>
  useGet<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>(
    `/api/services/Shesha/PersonTest/Get`,
    props
  );

export type personTestGetProps = Omit<
  RestfulShesha.GetProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>,
  'queryParams'
>;
export const personTestGet = (queryParams: PersonTestGetQueryParams, props: personTestGetProps) =>
  RestfulShesha.get<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>(
    `/api/services/Shesha/PersonTest/Get`,
    queryParams,
    props
  );

export type PersonTestUpdateProps = Omit<
  MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'path' | 'verb'
>;

export const PersonTestUpdate = (props: PersonTestUpdateProps) => (
  <Mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>
    verb="PUT"
    path={`/api/services/Shesha/PersonTest/Update`}
    {...props}
  />
);

export type UsePersonTestUpdateProps = Omit<
  UseMutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'path' | 'verb'
>;

export const usePersonTestUpdate = (props: UsePersonTestUpdateProps) =>
  useMutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>(
    'PUT',
    `/api/services/Shesha/PersonTest/Update`,
    props
  );

export type personTestUpdateProps = Omit<
  RestfulShesha.MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'data'
>;
export const personTestUpdate = (data: PersonGuidDynamicDto, props: personTestUpdateProps) =>
  RestfulShesha.mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>(
    'PUT',
    `/api/services/Shesha/PersonTest/Update`,
    data,
    props
  );

export interface PersonTestGetAllQueryParams {
  sorting?: string | null;
  skipCount?: number;
  maxResultCount?: number;
}

export type PersonTestGetAllProps = Omit<
  GetProps<PersonGuidDynamicDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PersonTestGetAllQueryParams, void>,
  'path'
>;

export const PersonTestGetAll = (props: PersonTestGetAllProps) => (
  <Get<PersonGuidDynamicDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PersonTestGetAllQueryParams, void>
    path={`/api/services/Shesha/PersonTest/GetAll`}
    {...props}
  />
);

export type UsePersonTestGetAllProps = Omit<
  UseGetProps<PersonGuidDynamicDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PersonTestGetAllQueryParams, void>,
  'path'
>;

export const usePersonTestGetAll = (props: UsePersonTestGetAllProps) =>
  useGet<PersonGuidDynamicDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PersonTestGetAllQueryParams, void>(
    `/api/services/Shesha/PersonTest/GetAll`,
    props
  );

export type personTestGetAllProps = Omit<
  RestfulShesha.GetProps<
    PersonGuidDynamicDtoPagedResultDtoAjaxResponse,
    AjaxResponseBase,
    PersonTestGetAllQueryParams,
    void
  >,
  'queryParams'
>;
export const personTestGetAll = (queryParams: PersonTestGetAllQueryParams, props: personTestGetAllProps) =>
  RestfulShesha.get<
    PersonGuidDynamicDtoPagedResultDtoAjaxResponse,
    AjaxResponseBase,
    PersonTestGetAllQueryParams,
    void
  >(`/api/services/Shesha/PersonTest/GetAll`, queryParams, props);

export type PersonTestCreateProps = Omit<
  MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'path' | 'verb'
>;

export const PersonTestCreate = (props: PersonTestCreateProps) => (
  <Mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>
    verb="POST"
    path={`/api/services/Shesha/PersonTest/Create`}
    {...props}
  />
);

export type UsePersonTestCreateProps = Omit<
  UseMutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'path' | 'verb'
>;

export const usePersonTestCreate = (props: UsePersonTestCreateProps) =>
  useMutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>(
    'POST',
    `/api/services/Shesha/PersonTest/Create`,
    props
  );

export type personTestCreateProps = Omit<
  RestfulShesha.MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'data'
>;
export const personTestCreate = (data: PersonGuidDynamicDto, props: personTestCreateProps) =>
  RestfulShesha.mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>(
    'POST',
    `/api/services/Shesha/PersonTest/Create`,
    data,
    props
  );

export interface PersonTestDeleteQueryParams {
  id?: string;
}

export type PersonTestDeleteProps = Omit<
  MutateProps<void, unknown, PersonTestDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const PersonTestDelete = (props: PersonTestDeleteProps) => (
  <Mutate<void, unknown, PersonTestDeleteQueryParams, void, void>
    verb="DELETE"
    path={`/api/services/Shesha/PersonTest/Delete`}
    {...props}
  />
);

export type UsePersonTestDeleteProps = Omit<
  UseMutateProps<void, unknown, PersonTestDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const usePersonTestDelete = (props: UsePersonTestDeleteProps) =>
  useMutate<void, unknown, PersonTestDeleteQueryParams, void, void>(
    'DELETE',
    `/api/services/Shesha/PersonTest/Delete`,
    { ...props }
  );

export type personTestDeleteProps = Omit<
  RestfulShesha.MutateProps<void, unknown, PersonTestDeleteQueryParams, void, void>,
  'data'
>;
export const personTestDelete = (props: personTestDeleteProps) =>
  RestfulShesha.mutate<void, unknown, PersonTestDeleteQueryParams, void, void>(
    'DELETE',
    `/api/services/Shesha/PersonTest/Delete`,
    undefined,
    props
  );
