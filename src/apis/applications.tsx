/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
export interface NDADetailsDto {
  personId?: string;
  hasAcceptedDeclaration?: boolean;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface NDADetailsDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: NDADetailsDto;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface StoredFileDto {
  error?: string | null;
  id?: string | null;
  name?: string | null;
  fileCategory?: number | null;
  url?: string | null;
  size?: number;
  type?: string | null;
}

export interface GuidNullableEntityWithDisplayNameDto {
  id?: string | null;
  displayText?: string | null;
}

export interface StudentApplicationDocumentsResponse {
  entityForm?: StoredFileDto;
  letterOfUndertaking?: StoredFileDto;
  bursaryContract?: StoredFileDto;
  confirmationOfBankAccount?: StoredFileDto;
  declarationOfAttendanceFile?: StoredFileDto;
  student?: GuidNullableEntityWithDisplayNameDto;
}

export interface StudentApplicationDocumentsResponseAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: StudentApplicationDocumentsResponse;
}

export interface ReferenceListItemValueDto {
  item?: string | null;
  itemValue?: number | null;
}

export interface AddressDto {
  id?: string;
  addressType?: number | null;
  fullAddress?: string | null;
  addressLine1?: string | null;
  addressLine2?: string | null;
  addressLine3?: string | null;
  suburb?: string | null;
  town?: string | null;
  poBox?: string | null;
  locationType?: number | null;
  houseNumber?: string | null;
  buildingComplexName?: string | null;
  streetName?: string | null;
  suburbTownship?: string | null;
  sectionExtension?: string | null;
  city?: string | null;
  province?: number | null;
  latitude?: number | null;
  longitude?: number | null;
}

export interface UserDto {
  id?: number;
  userName: string;
  name: string;
  surname: string;
  emailAddress: string;
  isActive?: boolean;
  fullName?: string | null;
  lastLoginTime?: string | null;
  creationTime?: string;
  roleNames?: string[] | null;
}

export interface StudentResponse {
  id?: string;
  firstName?: string | null;
  lastName?: string | null;
  mobileNumber1?: string | null;
  mobileNumber2?: string | null;
  /**
   * This must be used as a telephone number
   */
  officeNumber?: string | null;
  emailAddress1?: string | null;
  identityNumber?: string | null;
  title?: ReferenceListItemValueDto;
  passportNumber?: string | null;
  /**
   * South African ID Number.
   */
  saidNumber?: string | null;
  gender?: ReferenceListItemValueDto;
  dateOfBirth?: string | null;
  hasDisability?: boolean | null;
  /**
   * For Passportabd and assylumn seaker the value is goung to be be false
   * For SA ID which is not verifired by DHA the value is going to be false
   * else true
   */
  hasVerifiedSAIDNumberByDHA?: boolean | null;
  /**
   * Date that the Office Bearer was created
   */
  creationTime?: string | null;
  mobileNumber?: string | null;
  emailAddress?: string | null;
  race?: ReferenceListItemValueDto;
  residentialAddress?: AddressDto;
  physicalAddress?: AddressDto;
  studentNumber?: string | null;
  age?: string | null;
  highestGrade?: ReferenceListItemValueDto;
  isDisabled?: boolean;
  isEnrollmentConfirmed?: boolean;
  district?: GuidNullableEntityWithDisplayNameDto;
  municipality?: GuidNullableEntityWithDisplayNameDto;
  council?: string | null;
  wardNumber?: string | null;
  isSouthAfrican?: boolean;
  isKznResident?: boolean;
  hasRecievedOrientationInvite?: boolean;
  user?: UserDto;
  fullName?: string | null;
  declarationOfAttendanceFile?: StoredFileDto;
  entityFormFile?: StoredFileDto;
  confirmationOfBankAccountFile?: StoredFileDto;
  bursaryContractFile?: StoredFileDto;
  fundingStatus?: ReferenceListItemValueDto;
}

export interface ParentDto {
  identityNumber?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  gender?: ReferenceListItemValueDto;
  /**
   * Cellphone
   */
  mobileNumber1?: string | null;
  /**
   * Alternative number
   */
  mobileNumber2?: string | null;
  /**
   * Email Address
   */
  emailAddress1?: string | null;
  race?: ReferenceListItemValueDto;
  incomeRange?: ReferenceListItemValueDto;
  isEmployed?: boolean | null;
  employer?: string | null;
  employerAddress?: AddressDto;
  isMissing?: boolean | null;
  reasonForMissing?: ReferenceListItemValueDto;
  fullName?: string | null;
}

export type RefListDocumentVerificarionStatus = 1 | 2 | 3 | 4;

export interface DocumentVerificationDto {
  id?: string | null;
  ownerId?: string | null;
  verificationStatus?: RefListDocumentVerificarionStatus;
  file?: StoredFileDto;
  filePropertyName?: string | null;
}

export interface ApplicationFiles {
  id?: string;
  certifiedIDFile?: DocumentVerificationDto;
  motivationLetterFile?: DocumentVerificationDto;
  matricResultFile?: DocumentVerificationDto;
  proofOfResidenceFile?: DocumentVerificationDto;
  certifiedIDCopyOfParentAFile?: DocumentVerificationDto;
  certifiedIDCopyOfParentBFile?: DocumentVerificationDto;
  deathCertificateFile?: DocumentVerificationDto;
  affidavitFile?: DocumentVerificationDto;
  parentAProofOfIncomeFile?: DocumentVerificationDto;
  parentBProofOfIncomeFile?: DocumentVerificationDto;
  feeAccountStatementFile?: DocumentVerificationDto;
  proofOfRegistrationFile?: DocumentVerificationDto;
  statementOfResultFile?: DocumentVerificationDto;
  orientationNoticeFile?: DocumentVerificationDto;
  leaseAgreementFile?: DocumentVerificationDto;
  letterOfUndertakingFile?: DocumentVerificationDto;
  regretLetterFile?: DocumentVerificationDto;
  provisionalAcceptanceLetterFile?: DocumentVerificationDto;
}

export interface ApplicationDto {
  id?: string;
  student?: StudentResponse;
  referral?: GuidNullableEntityWithDisplayNameDto;
  schoolName?: string | null;
  isTertiaryEnrolled?: boolean;
  feesAmount?: number;
  institution?: GuidNullableEntityWithDisplayNameDto;
  appliedQualificationName?: string | null;
  intendedStudyYears?: string | null;
  enrolledQualificationName?: string | null;
  currentYearOfStudy?: ReferenceListItemValueDto;
  remainingStudyYears?: string | null;
  studyStartYear?: string | null;
  studyCompletionYear?: string | null;
  areFeesOutstanding?: boolean;
  passedSubjectsCsv?: string | null;
  remainingSubjectsCsv?: string | null;
  hasFailedStudies?: boolean;
  failedYearsCsv?: string | null;
  hasRewrittenExams?: boolean;
  rewrittenExamsCsv?: string | null;
  qualificationMajorSubjectsCsv?: string | null;
  hasProvisionalAcceptance?: boolean;
  hasCriminalConviction?: boolean;
  hasConsultedVCouncilor?: boolean;
  hasReceivedPublicBursary?: boolean;
  hasAppliedToOtherSponsor?: boolean;
  nameOfSponsor?: string | null;
  obligationToSponsor?: string | null;
  isObligationsFullfilled?: boolean;
  isOfferSent?: boolean;
  isOfferResponded?: boolean;
  isHomeAdddressVerified?: boolean;
  isEmployementVerified?: boolean;
  isTetiaryAcceptanceVerified?: boolean;
  isReportCardVerified?: boolean;
  applicationDate?: string | null;
  offerExpiryDate?: string | null;
  applicationStatus?: ReferenceListItemValueDto;
  reasonForNotRecommending?: ReferenceListItemValueDto;
  isTermsAndConditionAccepted?: boolean;
  publicBursaryStartDate?: string | null;
  publicBursaryEndDate?: string | null;
  onBoardingProcessStatus?: ReferenceListItemValueDto;
  parentA?: ParentDto;
  parentB?: ParentDto;
  applicationFiles?: ApplicationFiles;
  documentsStatus?: ReferenceListItemValueDto;
  clerkDecision?: ReferenceListItemValueDto;
  commiteeDecision?: ReferenceListItemValueDto;
  bursaryUnitDecision?: ReferenceListItemValueDto;
  dgDecision?: ReferenceListItemValueDto;
  applicationType?: ReferenceListItemValueDto;
  failedYear?: string | null;
  motivation?: string | null;
  letterOfUndertakingFile?: StoredFileDto;
  regretLetterFile?: StoredFileDto;
  entityFormFile?: StoredFileDto;
}

export interface ApplicationDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: ApplicationDto;
}

export type RefListApplicationStatus = 1 | 2 | 3 | 4 | 7 | 8 | 9 | 10 | 11 | 20 | 21;

export interface ApplicationsStatsResponse {
  numApplicationsAwaitingProccessing?: number;
  numApplicationsAwaitingCommitee?: number;
  numApplicationsAwaitingBursaryUnit?: number;
  numApplicationsDueForDG?: number;
  totalQAFinal?: number;
  totalQAAwarded?: number;
  totalQANotAwarded?: number;
}

export interface ApplicationsStatsResponseAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: ApplicationsStatsResponse;
}

export interface CheckListItemSelectionDto {
  checkListItemId?: string;
  selection?: number | null;
  comments?: string | null;
  name?: string | null;
}

export interface SaveSelectionInput {
  id: string;
  ownerType: string;
  ownerId: string;
  selection: CheckListItemSelectionDto[];
}

export interface ProcessApplicationInput {
  id?: string;
  isRecommended?: boolean;
  processApplicationCheckList?: SaveSelectionInput;
  outStandingDocumentsCheckList?: SaveSelectionInput;
}

export type RefListReasonForNotRecommending = 0 | 1 | 3 | 4 | 5 | 6 | 8 | 9 | 10;

export interface CommiteeRecomendInput {
  id?: string;
  isRecommended?: boolean;
  reasonForNotRecommending?: RefListReasonForNotRecommending;
  comment?: string | null;
}

export interface CreateNDASelectionDto {
  id?: string;
  ndaSelectionChecklist?: SaveSelectionInput;
}

export interface CreateNDASelectionDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: CreateNDASelectionDto;
}

export interface VerificationStatusInput {
  id?: string;
  fileId?: string;
  ownerId?: string;
  verificationStatus?: RefListDocumentVerificarionStatus;
}

export interface DocumentVerificationDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: DocumentVerificationDto;
}

export type ApplicationResultsAction = 1 | 2 | 3;

export interface ApplicationActionInput {
  action?: ApplicationResultsAction;
}

export interface ApplicationDGResultsUpdate {
  id?: string;
  dgDecision?: ReferenceListItemValueDto;
}

export interface ApplicationEducationDetailsUpdate {
  schoolName?: string | null;
  isTertiaryEnrolled?: boolean;
  institution?: GuidNullableEntityWithDisplayNameDto;
  highestGrade?: ReferenceListItemValueDto;
  appliedQualificationName?: string | null;
  studentNumber?: string | null;
  intendedStudyYears?: string | null;
  enrolledQualificationName?: string | null;
  currentYearOfStudy?: ReferenceListItemValueDto;
  remainingStudyYears?: string | null;
  studyStartYear?: string | null;
  studyCompletionYear?: string | null;
  areFeesOutstanding?: boolean;
  hasFailedStudies?: boolean;
  hasRewrittenExams?: boolean;
  isTermsAndConditionAccepted?: boolean;
  isTetiaryAcceptanceVerified?: boolean;
  numberOfStudyYears?: string | null;
  failedYear?: string | null;
  feesAmount?: number;
}

export interface ApplicationParentDetailsUpdate {
  parentA?: ParentDto;
  parentB?: ParentDto;
}

export interface ApplicationDeclarationUpdate {
  hasCriminalConviction?: boolean;
  applicationDate?: string | null;
  hasConsultedVCouncilor?: boolean;
  hasReceivedPublicBursary?: boolean;
  publicBursaryStartDate?: string | null;
  publicBursaryEndDate?: string | null;
  hasAppliedToOtherSponsor?: boolean;
  nameOfSponsor?: string | null;
  obligationToSponsor?: string | null;
  isObligationsFullfilled?: boolean;
}

export interface ApplicationsGetNDADetailsPathParams {
  id: string;
}

export type ApplicationsGetNDADetailsProps = Omit<
  GetProps<NDADetailsDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetNDADetailsPathParams>,
  'path'
> &
  ApplicationsGetNDADetailsPathParams;

export const ApplicationsGetNDADetails = ({ id, ...props }: ApplicationsGetNDADetailsProps) => (
  <Get<NDADetailsDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetNDADetailsPathParams>
    path={`/api/v1/BursMan/Applications/GetNDADetails/${id}`}
    {...props}
  />
);

export type UseApplicationsGetNDADetailsProps = Omit<
  UseGetProps<NDADetailsDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetNDADetailsPathParams>,
  'path'
> &
  ApplicationsGetNDADetailsPathParams;

export const useApplicationsGetNDADetails = ({ id, ...props }: UseApplicationsGetNDADetailsProps) =>
  useGet<NDADetailsDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetNDADetailsPathParams>(
    (paramsInPath: ApplicationsGetNDADetailsPathParams) =>
      `/api/v1/BursMan/Applications/GetNDADetails/${paramsInPath.id}`,
    { pathParams: { id }, ...props }
  );

export const applicationsGetNdaDetails = (
  {
    id,
    ...props
  }: RestfulShesha.GetProps<NDADetailsDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetNDADetailsPathParams> & {
    id: string;
  },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<NDADetailsDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetNDADetailsPathParams>(
    `/api/v1/BursMan/Applications/GetNDADetails/${id}`,
    props,
    signal
  );

export interface ApplicationsGetStudentDocumentsPathParams {
  id: string;
}

export type ApplicationsGetStudentDocumentsProps = Omit<
  GetProps<
    StudentApplicationDocumentsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetStudentDocumentsPathParams
  >,
  'path'
> &
  ApplicationsGetStudentDocumentsPathParams;

export const ApplicationsGetStudentDocuments = ({ id, ...props }: ApplicationsGetStudentDocumentsProps) => (
  <Get<
    StudentApplicationDocumentsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetStudentDocumentsPathParams
  >
    path={`/api/v1/BursMan/Applications/Documents/Students/${id}`}
    {...props}
  />
);

export type UseApplicationsGetStudentDocumentsProps = Omit<
  UseGetProps<
    StudentApplicationDocumentsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetStudentDocumentsPathParams
  >,
  'path'
> &
  ApplicationsGetStudentDocumentsPathParams;

export const useApplicationsGetStudentDocuments = ({ id, ...props }: UseApplicationsGetStudentDocumentsProps) =>
  useGet<
    StudentApplicationDocumentsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetStudentDocumentsPathParams
  >(
    (paramsInPath: ApplicationsGetStudentDocumentsPathParams) =>
      `/api/v1/BursMan/Applications/Documents/Students/${paramsInPath.id}`,
    { pathParams: { id }, ...props }
  );

export const applicationsGetStudentDocuments = (
  {
    id,
    ...props
  }: RestfulShesha.GetProps<
    StudentApplicationDocumentsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetStudentDocumentsPathParams
  > & { id: string },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<
    StudentApplicationDocumentsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetStudentDocumentsPathParams
  >(`/api/v1/BursMan/Applications/Documents/Students/${id}`, props, signal);

export interface ApplicationsGetPathParams {
  id: string;
}

export type ApplicationsGetProps = Omit<
  GetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetPathParams>,
  'path'
> &
  ApplicationsGetPathParams;

export const ApplicationsGet = ({ id, ...props }: ApplicationsGetProps) => (
  <Get<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetPathParams>
    path={`/api/v1/BursMan/Applications/${id}`}
    {...props}
  />
);

export type UseApplicationsGetProps = Omit<
  UseGetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetPathParams>,
  'path'
> &
  ApplicationsGetPathParams;

export const useApplicationsGet = ({ id, ...props }: UseApplicationsGetProps) =>
  useGet<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetPathParams>(
    (paramsInPath: ApplicationsGetPathParams) => `/api/v1/BursMan/Applications/${paramsInPath.id}`,
    { pathParams: { id }, ...props }
  );

export const applicationsGet = (
  {
    id,
    ...props
  }: RestfulShesha.GetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetPathParams> & {
    id: string;
  },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetPathParams>(
    `/api/v1/BursMan/Applications/${id}`,
    props,
    signal
  );

export type ApplicationsGetMyApplicationProps = Omit<
  GetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void>,
  'path'
>;

export const ApplicationsGetMyApplication = (props: ApplicationsGetMyApplicationProps) => (
  <Get<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void>
    path={`/api/v1/BursMan/Applications/MyApplication`}
    {...props}
  />
);

export type UseApplicationsGetMyApplicationProps = Omit<
  UseGetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void>,
  'path'
>;

export const useApplicationsGetMyApplication = (props: UseApplicationsGetMyApplicationProps) =>
  useGet<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void>(`/api/v1/BursMan/Applications/MyApplication`, props);

export const applicationsGetMyApplication = (
  props: RestfulShesha.GetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void>(
    `/api/v1/BursMan/Applications/MyApplication`,
    props,
    signal
  );

export interface ApplicationsGetStudentApplicationPathParams {
  id: string;
}

export type ApplicationsGetStudentApplicationProps = Omit<
  GetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetStudentApplicationPathParams>,
  'path'
> &
  ApplicationsGetStudentApplicationPathParams;

export const ApplicationsGetStudentApplication = ({ id, ...props }: ApplicationsGetStudentApplicationProps) => (
  <Get<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetStudentApplicationPathParams>
    path={`/api/v1/BursMan/Applications/StudentApplication/${id}`}
    {...props}
  />
);

export type UseApplicationsGetStudentApplicationProps = Omit<
  UseGetProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetStudentApplicationPathParams>,
  'path'
> &
  ApplicationsGetStudentApplicationPathParams;

export const useApplicationsGetStudentApplication = ({ id, ...props }: UseApplicationsGetStudentApplicationProps) =>
  useGet<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetStudentApplicationPathParams>(
    (paramsInPath: ApplicationsGetStudentApplicationPathParams) =>
      `/api/v1/BursMan/Applications/StudentApplication/${paramsInPath.id}`,
    { pathParams: { id }, ...props }
  );

export const applicationsGetStudentApplication = (
  {
    id,
    ...props
  }: RestfulShesha.GetProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetStudentApplicationPathParams
  > & { id: string },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationsGetStudentApplicationPathParams>(
    `/api/v1/BursMan/Applications/StudentApplication/${id}`,
    props,
    signal
  );

export interface ApplicationsGetApplicationsStatsPathParams {
  status: RefListApplicationStatus;
}

export type ApplicationsGetApplicationsStatsProps = Omit<
  GetProps<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationsGetApplicationsStatsPathParams>,
  'path'
> &
  ApplicationsGetApplicationsStatsPathParams;

export const ApplicationsGetApplicationsStats = ({ status, ...props }: ApplicationsGetApplicationsStatsProps) => (
  <Get<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationsGetApplicationsStatsPathParams>
    path={`/api/v1/BursMan/Applications/GetApplicationsStats/${status}`}
    {...props}
  />
);

export type UseApplicationsGetApplicationsStatsProps = Omit<
  UseGetProps<
    ApplicationsStatsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetApplicationsStatsPathParams
  >,
  'path'
> &
  ApplicationsGetApplicationsStatsPathParams;

export const useApplicationsGetApplicationsStats = ({ status, ...props }: UseApplicationsGetApplicationsStatsProps) =>
  useGet<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationsGetApplicationsStatsPathParams>(
    (paramsInPath: ApplicationsGetApplicationsStatsPathParams) =>
      `/api/v1/BursMan/Applications/GetApplicationsStats/${paramsInPath.status}`,
    { pathParams: { status }, ...props }
  );

export const applicationsGetApplicationsStats = (
  {
    status,
    ...props
  }: RestfulShesha.GetProps<
    ApplicationsStatsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetApplicationsStatsPathParams
  > & { status: RefListApplicationStatus },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<
    ApplicationsStatsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationsGetApplicationsStatsPathParams
  >(`/api/v1/BursMan/Applications/GetApplicationsStats/${status}`, props, signal);

export type ApplicationsProcessApplicationProps = Omit<
  MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ProcessApplicationInput, void>,
  'path' | 'verb'
>;

export const ApplicationsProcessApplication = (props: ApplicationsProcessApplicationProps) => (
  <Mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ProcessApplicationInput, void>
    verb="POST"
    path={`/api/v1/BursMan/Applications/ProcessApplication`}
    {...props}
  />
);

export type UseApplicationsProcessApplicationProps = Omit<
  UseMutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ProcessApplicationInput, void>,
  'path' | 'verb'
>;

export const useApplicationsProcessApplication = (props: UseApplicationsProcessApplicationProps) =>
  useMutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ProcessApplicationInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/ProcessApplication`,
    props
  );

export const applicationsProcessApplication = (
  props: RestfulShesha.MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ProcessApplicationInput, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ProcessApplicationInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/ProcessApplication`,
    props,
    signal
  );

export type ApplicationsCommiteeReccomendProps = Omit<
  MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>,
  'path' | 'verb'
>;

export const ApplicationsCommiteeReccomend = (props: ApplicationsCommiteeReccomendProps) => (
  <Mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>
    verb="POST"
    path={`/api/v1/BursMan/Applications/CommiteeRecommend`}
    {...props}
  />
);

export type UseApplicationsCommiteeReccomendProps = Omit<
  UseMutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>,
  'path' | 'verb'
>;

export const useApplicationsCommiteeReccomend = (props: UseApplicationsCommiteeReccomendProps) =>
  useMutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/CommiteeRecommend`,
    props
  );

export const applicationsCommiteeReccomend = (
  props: RestfulShesha.MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/CommiteeRecommend`,
    props,
    signal
  );

export type ApplicationsBursaryCommiteeReccomendProps = Omit<
  MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>,
  'path' | 'verb'
>;

export const ApplicationsBursaryCommiteeReccomend = (props: ApplicationsBursaryCommiteeReccomendProps) => (
  <Mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>
    verb="POST"
    path={`/api/v1/BursMan/Applications/BursaryCommiteeRecommend`}
    {...props}
  />
);

export type UseApplicationsBursaryCommiteeReccomendProps = Omit<
  UseMutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>,
  'path' | 'verb'
>;

export const useApplicationsBursaryCommiteeReccomend = (props: UseApplicationsBursaryCommiteeReccomendProps) =>
  useMutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/BursaryCommiteeRecommend`,
    props
  );

export const applicationsBursaryCommiteeReccomend = (
  props: RestfulShesha.MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, CommiteeRecomendInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/BursaryCommiteeRecommend`,
    props,
    signal
  );

export type ApplicationsCreateNDASelectionProps = Omit<
  MutateProps<CreateNDASelectionDtoAjaxResponse, AjaxResponseBase, void, CreateNDASelectionDto, void>,
  'path' | 'verb'
>;

export const ApplicationsCreateNDASelection = (props: ApplicationsCreateNDASelectionProps) => (
  <Mutate<CreateNDASelectionDtoAjaxResponse, AjaxResponseBase, void, CreateNDASelectionDto, void>
    verb="POST"
    path={`/api/v1/BursMan/Applications/CreateNDASelection`}
    {...props}
  />
);

export type UseApplicationsCreateNDASelectionProps = Omit<
  UseMutateProps<CreateNDASelectionDtoAjaxResponse, AjaxResponseBase, void, CreateNDASelectionDto, void>,
  'path' | 'verb'
>;

export const useApplicationsCreateNDASelection = (props: UseApplicationsCreateNDASelectionProps) =>
  useMutate<CreateNDASelectionDtoAjaxResponse, AjaxResponseBase, void, CreateNDASelectionDto, void>(
    'POST',
    `/api/v1/BursMan/Applications/CreateNDASelection`,
    props
  );

export const applicationsCreateNdaSelection = (
  props: RestfulShesha.MutateProps<
    CreateNDASelectionDtoAjaxResponse,
    AjaxResponseBase,
    void,
    CreateNDASelectionDto,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<CreateNDASelectionDtoAjaxResponse, AjaxResponseBase, void, CreateNDASelectionDto, void>(
    'POST',
    `/api/v1/BursMan/Applications/CreateNDASelection`,
    props,
    signal
  );

export type ApplicationsCreateProps = Omit<
  MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationDto, void>,
  'path' | 'verb'
>;

export const ApplicationsCreate = (props: ApplicationsCreateProps) => (
  <Mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationDto, void>
    verb="POST"
    path={`/api/v1/BursMan/Applications`}
    {...props}
  />
);

export type UseApplicationsCreateProps = Omit<
  UseMutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationDto, void>,
  'path' | 'verb'
>;

export const useApplicationsCreate = (props: UseApplicationsCreateProps) =>
  useMutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationDto, void>(
    'POST',
    `/api/v1/BursMan/Applications`,
    props
  );

export const applicationsCreate = (
  props: RestfulShesha.MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationDto, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, ApplicationDto, void>(
    'POST',
    `/api/v1/BursMan/Applications`,
    props,
    signal
  );

export type ApplicationsUpdateDocumentVerificationStatusProps = Omit<
  MutateProps<DocumentVerificationDtoAjaxResponse, AjaxResponseBase, void, VerificationStatusInput, void>,
  'path' | 'verb'
>;

export const ApplicationsUpdateDocumentVerificationStatus = (
  props: ApplicationsUpdateDocumentVerificationStatusProps
) => (
  <Mutate<DocumentVerificationDtoAjaxResponse, AjaxResponseBase, void, VerificationStatusInput, void>
    verb="POST"
    path={`/api/v1/BursMan/Applications/UpdateDocumentVerificationStatus`}
    {...props}
  />
);

export type UseApplicationsUpdateDocumentVerificationStatusProps = Omit<
  UseMutateProps<DocumentVerificationDtoAjaxResponse, AjaxResponseBase, void, VerificationStatusInput, void>,
  'path' | 'verb'
>;

export const useApplicationsUpdateDocumentVerificationStatus = (
  props: UseApplicationsUpdateDocumentVerificationStatusProps
) =>
  useMutate<DocumentVerificationDtoAjaxResponse, AjaxResponseBase, void, VerificationStatusInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/UpdateDocumentVerificationStatus`,
    props
  );

export const applicationsUpdateDocumentVerificationStatus = (
  props: RestfulShesha.MutateProps<
    DocumentVerificationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    VerificationStatusInput,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<DocumentVerificationDtoAjaxResponse, AjaxResponseBase, void, VerificationStatusInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/UpdateDocumentVerificationStatus`,
    props,
    signal
  );

export type ApplicationsActionApplicationsResultsProps = Omit<
  MutateProps<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationActionInput, void>,
  'path' | 'verb'
>;

/**
 * {}
 */
export const ApplicationsActionApplicationsResults = (props: ApplicationsActionApplicationsResultsProps) => (
  <Mutate<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationActionInput, void>
    verb="POST"
    path={`/api/v1/BursMan/Applications/ActionApplicationsResults`}
    {...props}
  />
);

export type UseApplicationsActionApplicationsResultsProps = Omit<
  UseMutateProps<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationActionInput, void>,
  'path' | 'verb'
>;

/**
 * {}
 */
export const useApplicationsActionApplicationsResults = (props: UseApplicationsActionApplicationsResultsProps) =>
  useMutate<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationActionInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/ActionApplicationsResults`,
    props
  );

/**
 * {}
 */
export const applicationsActionApplicationsResults = (
  props: RestfulShesha.MutateProps<
    ApplicationsStatsResponseAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationActionInput,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<ApplicationsStatsResponseAjaxResponse, AjaxResponseBase, void, ApplicationActionInput, void>(
    'POST',
    `/api/v1/BursMan/Applications/ActionApplicationsResults`,
    props,
    signal
  );

export interface ApplicationsUpdateDGResultsQueryParams {
  id?: string;
}

export type ApplicationsUpdateDGResultsProps = Omit<
  MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsUpdateDGResultsQueryParams,
    ApplicationDGResultsUpdate,
    void
  >,
  'path' | 'verb'
>;

export const ApplicationsUpdateDGResults = (props: ApplicationsUpdateDGResultsProps) => (
  <Mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsUpdateDGResultsQueryParams,
    ApplicationDGResultsUpdate,
    void
  >
    verb="PUT"
    path={`/api/v1/BursMan/Applications/UpdateDGResults`}
    {...props}
  />
);

export type UseApplicationsUpdateDGResultsProps = Omit<
  UseMutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsUpdateDGResultsQueryParams,
    ApplicationDGResultsUpdate,
    void
  >,
  'path' | 'verb'
>;

export const useApplicationsUpdateDGResults = (props: UseApplicationsUpdateDGResultsProps) =>
  useMutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsUpdateDGResultsQueryParams,
    ApplicationDGResultsUpdate,
    void
  >('PUT', `/api/v1/BursMan/Applications/UpdateDGResults`, props);

export const applicationsUpdateDgResults = (
  props: RestfulShesha.MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsUpdateDGResultsQueryParams,
    ApplicationDGResultsUpdate,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsUpdateDGResultsQueryParams,
    ApplicationDGResultsUpdate,
    void
  >('PUT', `/api/v1/BursMan/Applications/UpdateDGResults`, props, signal);

export interface ApplicationsUpdateEducationDetailsPathParams {
  id: string;
}

export type ApplicationsUpdateEducationDetailsProps = Omit<
  MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationEducationDetailsUpdate,
    ApplicationsUpdateEducationDetailsPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsUpdateEducationDetailsPathParams;

export const ApplicationsUpdateEducationDetails = ({ id, ...props }: ApplicationsUpdateEducationDetailsProps) => (
  <Mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationEducationDetailsUpdate,
    ApplicationsUpdateEducationDetailsPathParams
  >
    verb="PUT"
    path={`/api/v1/BursMan/Applications/${id}/Education-Details`}
    {...props}
  />
);

export type UseApplicationsUpdateEducationDetailsProps = Omit<
  UseMutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationEducationDetailsUpdate,
    ApplicationsUpdateEducationDetailsPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsUpdateEducationDetailsPathParams;

export const useApplicationsUpdateEducationDetails = ({ id, ...props }: UseApplicationsUpdateEducationDetailsProps) =>
  useMutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationEducationDetailsUpdate,
    ApplicationsUpdateEducationDetailsPathParams
  >(
    'PUT',
    (paramsInPath: ApplicationsUpdateEducationDetailsPathParams) =>
      `/api/v1/BursMan/Applications/${paramsInPath.id}/Education-Details`,
    { pathParams: { id }, ...props }
  );

export const applicationsUpdateEducationDetails = (
  {
    id,
    ...props
  }: RestfulShesha.MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationEducationDetailsUpdate,
    ApplicationsUpdateEducationDetailsPathParams
  > & { id: string },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationEducationDetailsUpdate,
    ApplicationsUpdateEducationDetailsPathParams
  >('PUT', `/api/v1/BursMan/Applications/${id}/Education-Details`, props, signal);

export interface ApplicationsUpdateFinancialDetailsPathParams {
  id: string;
}

export type ApplicationsUpdateFinancialDetailsProps = Omit<
  MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationParentDetailsUpdate,
    ApplicationsUpdateFinancialDetailsPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsUpdateFinancialDetailsPathParams;

export const ApplicationsUpdateFinancialDetails = ({ id, ...props }: ApplicationsUpdateFinancialDetailsProps) => (
  <Mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationParentDetailsUpdate,
    ApplicationsUpdateFinancialDetailsPathParams
  >
    verb="PUT"
    path={`/api/v1/BursMan/Applications/${id}/Financial-Details`}
    {...props}
  />
);

export type UseApplicationsUpdateFinancialDetailsProps = Omit<
  UseMutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationParentDetailsUpdate,
    ApplicationsUpdateFinancialDetailsPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsUpdateFinancialDetailsPathParams;

export const useApplicationsUpdateFinancialDetails = ({ id, ...props }: UseApplicationsUpdateFinancialDetailsProps) =>
  useMutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationParentDetailsUpdate,
    ApplicationsUpdateFinancialDetailsPathParams
  >(
    'PUT',
    (paramsInPath: ApplicationsUpdateFinancialDetailsPathParams) =>
      `/api/v1/BursMan/Applications/${paramsInPath.id}/Financial-Details`,
    { pathParams: { id }, ...props }
  );

export const applicationsUpdateFinancialDetails = (
  {
    id,
    ...props
  }: RestfulShesha.MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationParentDetailsUpdate,
    ApplicationsUpdateFinancialDetailsPathParams
  > & { id: string },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationParentDetailsUpdate,
    ApplicationsUpdateFinancialDetailsPathParams
  >('PUT', `/api/v1/BursMan/Applications/${id}/Financial-Details`, props, signal);

export interface ApplicationsUpdateDeclarationsPathParams {
  id: string;
}

export type ApplicationsUpdateDeclarationsProps = Omit<
  MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationDeclarationUpdate,
    ApplicationsUpdateDeclarationsPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsUpdateDeclarationsPathParams;

export const ApplicationsUpdateDeclarations = ({ id, ...props }: ApplicationsUpdateDeclarationsProps) => (
  <Mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationDeclarationUpdate,
    ApplicationsUpdateDeclarationsPathParams
  >
    verb="PUT"
    path={`/api/v1/BursMan/Applications/${id}/Declarations`}
    {...props}
  />
);

export type UseApplicationsUpdateDeclarationsProps = Omit<
  UseMutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationDeclarationUpdate,
    ApplicationsUpdateDeclarationsPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsUpdateDeclarationsPathParams;

export const useApplicationsUpdateDeclarations = ({ id, ...props }: UseApplicationsUpdateDeclarationsProps) =>
  useMutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationDeclarationUpdate,
    ApplicationsUpdateDeclarationsPathParams
  >(
    'PUT',
    (paramsInPath: ApplicationsUpdateDeclarationsPathParams) =>
      `/api/v1/BursMan/Applications/${paramsInPath.id}/Declarations`,
    { pathParams: { id }, ...props }
  );

export const applicationsUpdateDeclarations = (
  {
    id,
    ...props
  }: RestfulShesha.MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationDeclarationUpdate,
    ApplicationsUpdateDeclarationsPathParams
  > & { id: string },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ApplicationDeclarationUpdate,
    ApplicationsUpdateDeclarationsPathParams
  >('PUT', `/api/v1/BursMan/Applications/${id}/Declarations`, props, signal);

export interface ApplicationsSubmitPathParams {
  id: string;
}

export type ApplicationsSubmitProps = Omit<
  MutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void, ApplicationsSubmitPathParams>,
  'path' | 'verb'
> &
  ApplicationsSubmitPathParams;

export const ApplicationsSubmit = ({ id, ...props }: ApplicationsSubmitProps) => (
  <Mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void, ApplicationsSubmitPathParams>
    verb="PUT"
    path={`/api/v1/BursMan/Applications/${id}/Submit`}
    {...props}
  />
);

export type UseApplicationsSubmitProps = Omit<
  UseMutateProps<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void, ApplicationsSubmitPathParams>,
  'path' | 'verb'
> &
  ApplicationsSubmitPathParams;

export const useApplicationsSubmit = ({ id, ...props }: UseApplicationsSubmitProps) =>
  useMutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void, ApplicationsSubmitPathParams>(
    'PUT',
    (paramsInPath: ApplicationsSubmitPathParams) => `/api/v1/BursMan/Applications/${paramsInPath.id}/Submit`,
    { pathParams: { id }, ...props }
  );

export const applicationsSubmit = (
  {
    id,
    ...props
  }: RestfulShesha.MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    void,
    ApplicationsSubmitPathParams
  > & { id: string },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<ApplicationDtoAjaxResponse, AjaxResponseBase, void, void, ApplicationsSubmitPathParams>(
    'PUT',
    `/api/v1/BursMan/Applications/${id}/Submit`,
    props,
    signal
  );

export interface ApplicationsActionOfferQueryParams {
  onboardingStatus?: number;
}

export interface ApplicationsActionOfferPathParams {
  id: string;
}

export type ApplicationsActionOfferProps = Omit<
  MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsActionOfferQueryParams,
    void,
    ApplicationsActionOfferPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsActionOfferPathParams;

export const ApplicationsActionOffer = ({ id, ...props }: ApplicationsActionOfferProps) => (
  <Mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsActionOfferQueryParams,
    void,
    ApplicationsActionOfferPathParams
  >
    verb="PUT"
    path={`/api/v1/BursMan/Applications/${id}/ActionOffer`}
    {...props}
  />
);

export type UseApplicationsActionOfferProps = Omit<
  UseMutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsActionOfferQueryParams,
    void,
    ApplicationsActionOfferPathParams
  >,
  'path' | 'verb'
> &
  ApplicationsActionOfferPathParams;

export const useApplicationsActionOffer = ({ id, ...props }: UseApplicationsActionOfferProps) =>
  useMutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsActionOfferQueryParams,
    void,
    ApplicationsActionOfferPathParams
  >(
    'PUT',
    (paramsInPath: ApplicationsActionOfferPathParams) => `/api/v1/BursMan/Applications/${paramsInPath.id}/ActionOffer`,
    { pathParams: { id }, ...props }
  );

export const applicationsActionOffer = (
  {
    id,
    ...props
  }: RestfulShesha.MutateProps<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsActionOfferQueryParams,
    void,
    ApplicationsActionOfferPathParams
  > & { id: string },
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<
    ApplicationDtoAjaxResponse,
    AjaxResponseBase,
    ApplicationsActionOfferQueryParams,
    void,
    ApplicationsActionOfferPathParams
  >('PUT', `/api/v1/BursMan/Applications/${id}/ActionOffer`, props, signal);
