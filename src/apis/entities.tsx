/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
/**
 * Dynamic data result
 */
export interface IDynamicDataResult {
  [key: string]: any;
}

export interface EntitiesGetQueryParams {
  entityType?: string;
  /**
   * List of properties to fetch in GraphQL-like syntax. Supports nested properties
   */
  properties?: string;
  id?: string;
  'api-version'?: string;
}

export type EntitiesGetProps = Omit<GetProps<IDynamicDataResult, unknown, EntitiesGetQueryParams, void>, 'path'>;

export const EntitiesGet = (props: EntitiesGetProps) => (
  <Get<IDynamicDataResult, unknown, EntitiesGetQueryParams, void> path={`/api/services/app/Entities/Get`} {...props} />
);

export type UseEntitiesGetProps = Omit<UseGetProps<IDynamicDataResult, unknown, EntitiesGetQueryParams, void>, 'path'>;

export const useEntitiesGet = (props: UseEntitiesGetProps) =>
  useGet<IDynamicDataResult, unknown, EntitiesGetQueryParams, void>(`/api/services/app/Entities/Get`, props);

export type entitiesGetProps = Omit<
  RestfulShesha.GetProps<IDynamicDataResult, unknown, EntitiesGetQueryParams, void>,
  'queryParams'
>;
export const entitiesGet = (queryParams: EntitiesGetQueryParams, props: entitiesGetProps) =>
  RestfulShesha.get<IDynamicDataResult, unknown, EntitiesGetQueryParams, void>(
    `/api/services/app/Entities/Get`,
    queryParams,
    props
  );

export interface EntitiesGetAllQueryParams {
  entityType?: string;
  /**
   * List of properties to fetch in GraphQL-like syntax. Supports nested properties
   */
  properties?: string;
  /**
   * Filter string in JsonLogic format
   */
  filter?: string;
  /**
   * Quick search string. Is used to search entities by text
   */
  quickSearch?: string;
  sorting?: string;
  skipCount?: number;
  maxResultCount?: number;
  'api-version'?: string;
}

export type EntitiesGetAllProps = Omit<GetProps<IDynamicDataResult, unknown, EntitiesGetAllQueryParams, void>, 'path'>;

export const EntitiesGetAll = (props: EntitiesGetAllProps) => (
  <Get<IDynamicDataResult, unknown, EntitiesGetAllQueryParams, void>
    path={`/api/services/app/Entities/GetAll`}
    {...props}
  />
);

export type UseEntitiesGetAllProps = Omit<
  UseGetProps<IDynamicDataResult, unknown, EntitiesGetAllQueryParams, void>,
  'path'
>;

export const useEntitiesGetAll = (props: UseEntitiesGetAllProps) =>
  useGet<IDynamicDataResult, unknown, EntitiesGetAllQueryParams, void>(`/api/services/app/Entities/GetAll`, props);

export type entitiesGetAllProps = Omit<
  RestfulShesha.GetProps<IDynamicDataResult, unknown, EntitiesGetAllQueryParams, void>,
  'queryParams'
>;
export const entitiesGetAll = (queryParams: EntitiesGetAllQueryParams, props: entitiesGetAllProps) =>
  RestfulShesha.get<IDynamicDataResult, unknown, EntitiesGetAllQueryParams, void>(
    `/api/services/app/Entities/GetAll`,
    queryParams,
    props
  );
