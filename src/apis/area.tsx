/* Generated by restful-react */

import React from "react";
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from "restful-react";

import * as RestfulShesha from "../utils/fetchers"
export const SPEC_VERSION = "v1"; 
export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface AreaCreateDto {
  name?: string | null;
  shortName?: string | null;
  parentArea?: GuidNullableEntityReferenceDto;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
}

export interface AreaDto {
  id?: string;
  name?: string | null;
  shortName?: string | null;
  parentArea?: GuidNullableEntityReferenceDto;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
}

export interface AreaDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaDto;
}

export interface AreaDtoPagedResultDto {
  items?: AreaDto[] | null;
  totalCount?: number;
}

export interface AreaDtoPagedResultDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaDtoPagedResultDto;
}

export interface AreaGraphQLDataResult {
  tenantId?: number | null;
  isDeleted?: boolean | null;
  lastModifierUserId?: number | null;
  name?: string;
  deleterUserId?: number | null;
  deletionTime?: string | null;
  areaType?: number | null;
  shortName?: string;
  creationTime?: string | null;
  creatorUserId?: number | null;
  comments?: string;
  lastModificationTime?: string | null;
  parentArea?: string | null;
  _className?: MetaDto;
  _jObject?: {
  [key: string]: JToken;
};
  id?: string;
}

export interface AreaGraphQLDataResultAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaGraphQLDataResult;
}

/**
 * NOTE: shape of the response depends on the `properties` argument
 */
export interface AreaPagedResultDtoGraphQLDataResult {
  totalCount?: number;
  items?: ProxyDynamicDtoAreaGuid[];
}

export interface AreaPagedResultDtoGraphQLDataResultAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaPagedResultDtoGraphQLDataResult;
}

export interface AreaTreeItemDto {
  id?: string;
  name?: string | null;
  parentId?: string | null;
  hasChilds?: boolean;
}

export interface AreaTreeItemDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaTreeItemDto;
}

export interface AreaTreeItemDtoListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaTreeItemDto[] | null;
}

export interface AreaUpdateDto {
  id?: string;
  name?: string | null;
  shortName?: string | null;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
}

/**
 * Generic DTO of the simple autocomplete item
 */
export interface AutocompleteItemDto {
  value?: string | null;
  displayText?: string | null;
}

export interface AutocompleteItemDtoListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AutocompleteItemDto[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface GetChildAreasInput {
  id?: string | null;
}

export interface GuidEntityDto {
  id?: string;
}

/**
 * Generic entity reference Dto
 */
export interface GuidNullableEntityReferenceDto {
  id?: string | null;
  /**
   * Entity display name
   */
  _displayName?: string | null;
  /**
   * Entity class name
   */
  _className?: string | null;
}

export type JToken = JToken[];

export interface MetaDto {
  className?: string | null;
}

export interface MoveAreaInput {
  id?: string;
  newParentId?: string | null;
}

export interface ProxyDynamicDtoAreaGuid {
  id?: string;
  _jObject?: {
  [key: string]: JToken;
} | null;
  tenantId?: number | null;
  isDeleted?: boolean | null;
  lastModifierUserId?: number | null;
  name?: string | null;
  deleterUserId?: number | null;
  deletionTime?: string | null;
  areaType?: number | null;
  shortName?: string | null;
  creationTime?: string | null;
  creatorUserId?: number | null;
  comments?: string | null;
  lastModificationTime?: string | null;
  parentArea?: string | null;
  _className?: MetaDto;
}

export type RefListAreaType = 1 | 2 | 3 | 4 | 5 | 6;

export interface ReferenceListItemValueDto {
  item?: string | null;
  itemValue?: number | null;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface AreaAutocompleteQueryParams {
  term?: string;
  areaType?: RefListAreaType;
  parentAreaId?: string;
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaAutocompleteProps = Omit<GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>, "path">;

export const AreaAutocomplete = (props: AreaAutocompleteProps) => (
  <Get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>
    path={`/api/services/app/Area/Autocomplete`}
    
    {...props}
  />
);

export type UseAreaAutocompleteProps = Omit<UseGetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>, "path">;

export const useAreaAutocomplete = (props: UseAreaAutocompleteProps) => useGet<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>(`/api/services/app/Area/Autocomplete`, props);

export type areaAutocompleteProps = Omit<
    RestfulShesha.GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>,
    'queryParams'
  >;
        export const areaAutocomplete = (queryParams: AreaAutocompleteQueryParams,
          props: areaAutocompleteProps) => RestfulShesha.get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>(`/api/services/app/Area/Autocomplete`, queryParams, props);


export interface AreaCascadeSelectQueryParams {
  areaType?: RefListAreaType;
  parentAreaId?: string;
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaCascadeSelectProps = Omit<GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>, "path">;

export const AreaCascadeSelect = (props: AreaCascadeSelectProps) => (
  <Get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>
    path={`/api/services/app/Area/CascadeSelect`}
    
    {...props}
  />
);

export type UseAreaCascadeSelectProps = Omit<UseGetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>, "path">;

export const useAreaCascadeSelect = (props: UseAreaCascadeSelectProps) => useGet<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>(`/api/services/app/Area/CascadeSelect`, props);

export type areaCascadeSelectProps = Omit<
    RestfulShesha.GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>,
    'queryParams'
  >;
        export const areaCascadeSelect = (queryParams: AreaCascadeSelectQueryParams,
          props: areaCascadeSelectProps) => RestfulShesha.get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>(`/api/services/app/Area/CascadeSelect`, queryParams, props);


export interface AreaUpdateQueryParams {
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaUpdateProps = Omit<MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>, "path" | "verb">;

export const AreaUpdate = (props: AreaUpdateProps) => (
  <Mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>
    verb="PUT"
    path={`/api/services/app/Area/Update`}
    
    {...props}
  />
);

export type UseAreaUpdateProps = Omit<UseMutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>, "path" | "verb">;

export const useAreaUpdate = (props: UseAreaUpdateProps) => useMutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>("PUT", `/api/services/app/Area/Update`, props);

export type areaUpdateProps = Omit<
    RestfulShesha.MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>,
    'data'
  >;
      export const areaUpdate = (data: AreaUpdateDto,props: areaUpdateProps) => RestfulShesha.mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>("PUT", `/api/services/app/Area/Update`, data, props);


export interface AreaGetQueryParams {
  id?: string;
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaGetProps = Omit<GetProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>, "path">;

export const AreaGet = (props: AreaGetProps) => (
  <Get<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>
    path={`/api/services/app/Area/Get`}
    
    {...props}
  />
);

export type UseAreaGetProps = Omit<UseGetProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>, "path">;

export const useAreaGet = (props: UseAreaGetProps) => useGet<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>(`/api/services/app/Area/Get`, props);

export type areaGetProps = Omit<
    RestfulShesha.GetProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>,
    'queryParams'
  >;
        export const areaGet = (queryParams: AreaGetQueryParams,
          props: areaGetProps) => RestfulShesha.get<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>(`/api/services/app/Area/Get`, queryParams, props);


export interface AreaGetChildTreeItemsQueryParams {
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaGetChildTreeItemsProps = Omit<MutateProps<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, AreaGetChildTreeItemsQueryParams, GetChildAreasInput, void>, "path" | "verb">;

/**
 * Returns child areas of the specified parent
 */
export const AreaGetChildTreeItems = (props: AreaGetChildTreeItemsProps) => (
  <Mutate<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, AreaGetChildTreeItemsQueryParams, GetChildAreasInput, void>
    verb="POST"
    path={`/api/services/app/Area/GetChildTreeItems`}
    
    {...props}
  />
);

export type UseAreaGetChildTreeItemsProps = Omit<UseMutateProps<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, AreaGetChildTreeItemsQueryParams, GetChildAreasInput, void>, "path" | "verb">;

/**
 * Returns child areas of the specified parent
 */
export const useAreaGetChildTreeItems = (props: UseAreaGetChildTreeItemsProps) => useMutate<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, AreaGetChildTreeItemsQueryParams, GetChildAreasInput, void>("POST", `/api/services/app/Area/GetChildTreeItems`, props);

export type areaGetChildTreeItemsProps = Omit<
    RestfulShesha.MutateProps<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, AreaGetChildTreeItemsQueryParams, GetChildAreasInput, void>,
    'data'
  >;
      /**
 * Returns child areas of the specified parent
 */
export const areaGetChildTreeItems = (data: GetChildAreasInput,props: areaGetChildTreeItemsProps) => RestfulShesha.mutate<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, AreaGetChildTreeItemsQueryParams, GetChildAreasInput, void>("POST", `/api/services/app/Area/GetChildTreeItems`, data, props);


export interface AreaGetTreeItemQueryParams {
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaGetTreeItemProps = Omit<MutateProps<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>, "path" | "verb">;

/**
 * Returns child areas of the specified parent
 */
export const AreaGetTreeItem = (props: AreaGetTreeItemProps) => (
  <Mutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>
    verb="POST"
    path={`/api/services/app/Area/GetTreeItem`}
    
    {...props}
  />
);

export type UseAreaGetTreeItemProps = Omit<UseMutateProps<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>, "path" | "verb">;

/**
 * Returns child areas of the specified parent
 */
export const useAreaGetTreeItem = (props: UseAreaGetTreeItemProps) => useMutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>("POST", `/api/services/app/Area/GetTreeItem`, props);

export type areaGetTreeItemProps = Omit<
    RestfulShesha.MutateProps<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>,
    'data'
  >;
      /**
 * Returns child areas of the specified parent
 */
export const areaGetTreeItem = (data: GuidEntityDto,props: areaGetTreeItemProps) => RestfulShesha.mutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>("POST", `/api/services/app/Area/GetTreeItem`, data, props);


export interface AreaDeleteQueryParams {
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaDeleteProps = Omit<MutateProps<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>, "path" | "verb">;

export const AreaDelete = (props: AreaDeleteProps) => (
  <Mutate<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>
    verb="POST"
    path={`/api/services/app/Area/Delete`}
    
    {...props}
  />
);

export type UseAreaDeleteProps = Omit<UseMutateProps<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>, "path" | "verb">;

export const useAreaDelete = (props: UseAreaDeleteProps) => useMutate<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>("POST", `/api/services/app/Area/Delete`, props);

export type areaDeleteProps = Omit<
    RestfulShesha.MutateProps<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>,
    'data'
  >;
      export const areaDelete = (data: GuidEntityDto,props: areaDeleteProps) => RestfulShesha.mutate<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>("POST", `/api/services/app/Area/Delete`, data, props);


export interface AreaMoveAreaQueryParams {
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaMoveAreaProps = Omit<MutateProps<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>, "path" | "verb">;

/**
 * Moves Area to a new parent
 */
export const AreaMoveArea = (props: AreaMoveAreaProps) => (
  <Mutate<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>
    verb="POST"
    path={`/api/services/app/Area/MoveArea`}
    
    {...props}
  />
);

export type UseAreaMoveAreaProps = Omit<UseMutateProps<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>, "path" | "verb">;

/**
 * Moves Area to a new parent
 */
export const useAreaMoveArea = (props: UseAreaMoveAreaProps) => useMutate<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>("POST", `/api/services/app/Area/MoveArea`, props);

export type areaMoveAreaProps = Omit<
    RestfulShesha.MutateProps<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>,
    'data'
  >;
      /**
 * Moves Area to a new parent
 */
export const areaMoveArea = (data: MoveAreaInput,props: areaMoveAreaProps) => RestfulShesha.mutate<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>("POST", `/api/services/app/Area/MoveArea`, data, props);


export interface AreaCreateQueryParams {
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaCreateProps = Omit<MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>, "path" | "verb">;

export const AreaCreate = (props: AreaCreateProps) => (
  <Mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>
    verb="POST"
    path={`/api/services/app/Area/Create`}
    
    {...props}
  />
);

export type UseAreaCreateProps = Omit<UseMutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>, "path" | "verb">;

export const useAreaCreate = (props: UseAreaCreateProps) => useMutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>("POST", `/api/services/app/Area/Create`, props);

export type areaCreateProps = Omit<
    RestfulShesha.MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>,
    'data'
  >;
      export const areaCreate = (data: AreaCreateDto,props: areaCreateProps) => RestfulShesha.mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>("POST", `/api/services/app/Area/Create`, data, props);


export interface AreaGetAllQueryParams {
  /**
   * Filter string in JsonLogic format
   */
  filter?: string;
  /**
   * Quick search string. Is used to search entities by text
   */
  quickSearch?: string;
  sorting?: string;
  skipCount?: number;
  maxResultCount?: number;
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaGetAllProps = Omit<GetProps<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>, "path">;

export const AreaGetAll = (props: AreaGetAllProps) => (
  <Get<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>
    path={`/api/services/app/Area/GetAll`}
    
    {...props}
  />
);

export type UseAreaGetAllProps = Omit<UseGetProps<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>, "path">;

export const useAreaGetAll = (props: UseAreaGetAllProps) => useGet<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>(`/api/services/app/Area/GetAll`, props);

export type areaGetAllProps = Omit<
    RestfulShesha.GetProps<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>,
    'queryParams'
  >;
        export const areaGetAll = (queryParams: AreaGetAllQueryParams,
          props: areaGetAllProps) => RestfulShesha.get<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>(`/api/services/app/Area/GetAll`, queryParams, props);


export interface AreaQueryQueryParams {
  /**
   * List of properties to fetch in GraphQL-like syntax. Supports nested properties
   */
  properties?: string;
  id?: string;
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaQueryProps = Omit<GetProps<AreaGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryQueryParams, void>, "path">;

/**
 * Query entity data. 
 * NOTE: don't use on prod, will be merged with the `Get`endpoint soon
 */
export const AreaQuery = (props: AreaQueryProps) => (
  <Get<AreaGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryQueryParams, void>
    path={`/api/services/app/Area/Query`}
    
    {...props}
  />
);

export type UseAreaQueryProps = Omit<UseGetProps<AreaGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryQueryParams, void>, "path">;

/**
 * Query entity data. 
 * NOTE: don't use on prod, will be merged with the `Get`endpoint soon
 */
export const useAreaQuery = (props: UseAreaQueryProps) => useGet<AreaGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryQueryParams, void>(`/api/services/app/Area/Query`, props);

export type areaQueryProps = Omit<
    RestfulShesha.GetProps<AreaGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryQueryParams, void>,
    'queryParams'
  >;
        /**
 * Query entity data. 
 * NOTE: don't use on prod, will be merged with the `Get`endpoint soon
 */
export const areaQuery = (queryParams: AreaQueryQueryParams,
          props: areaQueryProps) => RestfulShesha.get<AreaGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryQueryParams, void>(`/api/services/app/Area/Query`, queryParams, props);


export interface AreaQueryAllQueryParams {
  /**
   * List of properties to fetch in GraphQL-like syntax. Supports nested properties
   */
  properties?: string;
  /**
   * Filter string in JsonLogic format
   */
  filter?: string;
  /**
   * Quick search string. Is used to search entities by text
   */
  quickSearch?: string;
  sorting?: string;
  skipCount?: number;
  maxResultCount?: number;
  /**
   * The requested API version
   */
  "api-version"?: string;
}

export type AreaQueryAllProps = Omit<GetProps<AreaPagedResultDtoGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryAllQueryParams, void>, "path">;

/**
 * Query entities list
 * NOTE: don't use on prod, will be merged with the GetAll endpoint soon
 */
export const AreaQueryAll = (props: AreaQueryAllProps) => (
  <Get<AreaPagedResultDtoGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryAllQueryParams, void>
    path={`/api/services/app/Area/QueryAll`}
    
    {...props}
  />
);

export type UseAreaQueryAllProps = Omit<UseGetProps<AreaPagedResultDtoGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryAllQueryParams, void>, "path">;

/**
 * Query entities list
 * NOTE: don't use on prod, will be merged with the GetAll endpoint soon
 */
export const useAreaQueryAll = (props: UseAreaQueryAllProps) => useGet<AreaPagedResultDtoGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryAllQueryParams, void>(`/api/services/app/Area/QueryAll`, props);

export type areaQueryAllProps = Omit<
    RestfulShesha.GetProps<AreaPagedResultDtoGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryAllQueryParams, void>,
    'queryParams'
  >;
        /**
 * Query entities list
 * NOTE: don't use on prod, will be merged with the GetAll endpoint soon
 */
export const areaQueryAll = (queryParams: AreaQueryAllQueryParams,
          props: areaQueryAllProps) => RestfulShesha.get<AreaPagedResultDtoGraphQLDataResultAjaxResponse, AjaxResponseBase, AreaQueryAllQueryParams, void>(`/api/services/app/Area/QueryAll`, queryParams, props);

